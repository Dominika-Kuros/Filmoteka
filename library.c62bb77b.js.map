{"mappings":"8kBAUA,MAAMA,EAAcC,SAASC,cAAc,iBACrCC,EAAgBF,SAASC,cAAc,mBAC7CC,EAAcC,UAAUC,IAAI,aAYrBC,eAAeC,IACpB,MAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,YACnD,IAAIC,QAAsBC,EAAKN,GAC/BO,EAAcF,GACd,MAAMG,EAAc,CAAEC,cAAeJ,EAAcK,SACnD,EAAAC,EAAAC,kBAAiBJ,EAAa,YAC9B,EAAAK,EAAAC,eACF,CAYA,SAASP,EAAcQ,EAAQC,EAAY,GACzC,MAAMC,EAAkBxB,SAASC,cAAc,oBAC/CuB,EAAgBC,UAAY,GAC5BH,EAAOI,SAAQrB,MAAMsB,IACnB,MACMC,SADe,EAAAC,EAAAC,WAAUH,EAAMI,KACXC,KAAIC,GAASA,EAAMC,OAGvCC,GADJP,EAAWX,OAASM,EAAYK,EAAWQ,MAAM,EAAGb,GAAWc,OAAO,CAAC,UAAYT,GACnDU,KAAK,MAEjCC,EAAY,wBACDZ,EAAMI,2IAEjBJ,EAAMa,qBACEb,EAAMc,kFACiBd,EAAMc,iGAEFN,sDAA8DR,EAAMe,aAAaN,MACxH,EACA,WAGFZ,EAAgBmB,mBAAmB,YAAaJ,EAAA,IAElDf,EAAgBoB,iBAAiB,SAASC,IACA,OAApCA,EAAEC,OAAOC,QAAQ,kBAGrB,EAAA3B,EAAA4B,eACA,EAAAC,EAAAC,cACA,EAAAD,EAAAE,gBAAeN,EAAEC,OAAOC,QAAQ,eAAeK,QAAQrB,IAAIsB,MAAK1B,KAC9D,EAAAsB,EAAAC,WAAUvB,IACV,EAAAsB,EAAAK,aAAY3B,IACZ,EAAAP,EAAAC,eAAW,IACb,GAEJ,CAEAhB,eAAeQ,EAAK0C,GAOlB,aANyBC,QAAQC,IAC/BF,EAAIvB,KAAI3B,MAAMqD,SACY,EAAAT,EAAAE,gBAAeO,KAK7C,CAzDA3D,EAAY6C,iBAAiB,SAAS,KACpC7C,EAAYI,UAAUC,IAAI,aAC1BF,EAAcC,UAAUwD,OAAO,aAlB1BtD,iBACL,MAAMuD,EAAWpD,KAAKC,MAAMC,aAAaC,QAAQ,UACjD,IAAIkD,QAAoBhD,EAAK+C,GAC7B9C,EAAc+C,GACd,MAAM9C,EAAc,CAAEC,cAAe6C,EAAY5C,SACjD,EAAAC,EAAAC,kBAAiBJ,EAAa,YAC9B,EAAAK,EAAAC,eACF,CAYEyC,EAAA,IAEF5D,EAAc0C,iBAAiB,SAAS,KACtC7C,EAAYI,UAAUwD,OAAO,aAC7BzD,EAAcC,UAAUC,IAAI,aAC5BE,GAAA,ICtCFA","sources":["src/js/library.js","src/library.js"],"sourcesContent":["import '../sass/main.scss';\nimport './modal-devs';\nimport './loader.js';\nimport './modal.js';\nimport './pagination';\nimport { getGenres } from './search';\nimport { createPagination } from './pagination';\nimport { removeLoader, showLoader } from './loader.js';\nimport { renderModal, showModal, fetchMovieById } from './modal.js';\n\nconst queueButton = document.querySelector('#queue-button');\nconst watchedButton = document.querySelector('#watched-button');\nwatchedButton.classList.add('is-active');\nconst API_KEY = '3453ae595a5d53cbc877c6d05de8a002';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function showQueue() {\n  const queueIds = JSON.parse(localStorage.getItem('queue'));\n  let queueMovies = await save(queueIds);\n  displayMovies(queueMovies);\n  const libraryData = { total_results: queueMovies.length };\n  createPagination(libraryData, 'library');\n  removeLoader();\n}\nexport async function showWatched() {\n  const watchedIds = JSON.parse(localStorage.getItem('watched'));\n  let watchedMovies = await save(watchedIds);\n  displayMovies(watchedMovies);\n  const libraryData = { total_results: watchedMovies.length };\n  createPagination(libraryData, 'library');\n  removeLoader();\n}\nqueueButton.addEventListener('click', () => {\n  queueButton.classList.add('is-active');\n  watchedButton.classList.remove('is-active');\n  showQueue();\n});\nwatchedButton.addEventListener('click', () => {\n  queueButton.classList.remove('is-active');\n  watchedButton.classList.add('is-active');\n  showWatched();\n});\n\nfunction displayMovies(movies, maxGenres = 2) {\n  const moviesContainer = document.querySelector('#library-gallery');\n  moviesContainer.innerHTML = '';\n  movies.forEach(async movie => {\n    const genres = await getGenres(movie.id);\n    const genreNames = genres.map(genre => genre.name);\n    const displayedGenres =\n      genreNames.length > maxGenres ? genreNames.slice(0, maxGenres).concat(['other']) : genreNames;\n    const genreText = displayedGenres.join(', ');\n\n    const movieCard = `\n      <div data-id=${movie.id} class=\"movie-card\">\n        <div class=\"movie-card__placeholder\"><img class=\"movie-card__image\" src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.title}\" width=\"395\" height=\"574\"></div>\n        <h2 class=\"movie-card__tittle\">${movie.title}</h2>\n        <p class=\"movie-card__info\"> \n        <span class=\"movie-card__overview\">${genreText}</span> | <span class=\"movie-card__realease-date\">${movie.release_date.slice(\n      0,\n      4,\n    )}\n    `;\n    moviesContainer.insertAdjacentHTML('beforeend', movieCard);\n  });\n  moviesContainer.addEventListener('click', e => {\n    if (e.target.closest('.movie-card') === null) {\n      return;\n    }\n    showLoader();\n    showModal();\n    fetchMovieById(e.target.closest('.movie-card').dataset.id).then(movie => {\n      showModal(movie);\n      renderModal(movie);\n      removeLoader();\n    });\n  });\n}\n\nasync function save(tab) {\n  const moviesData = await Promise.all(\n    tab.map(async movieId => {\n      const movieData = await fetchMovieById(movieId);\n      return movieData;\n    }),\n  );\n  return moviesData;\n}\n","import './js/library';\nimport { showWatched } from './js/library';\nshowWatched();\n"],"names":["$9da563a3715d9237$var$queueButton","document","querySelector","$9da563a3715d9237$var$watchedButton","classList","add","async","$9da563a3715d9237$export$c0b6fe2b6c5ef108","watchedIds","JSON","parse","localStorage","getItem","watchedMovies","$9da563a3715d9237$var$save","$9da563a3715d9237$var$displayMovies","libraryData","total_results","length","$g1uI7","createPagination","$fHyLY","removeLoader","movies","maxGenres","moviesContainer","innerHTML","forEach","movie","genreNames","$i1JLZ","getGenres","id","map","genre","name","genreText","slice","concat","join","movieCard","poster_path","title","release_date","insertAdjacentHTML","addEventListener","e","target","closest","showLoader","$40lI0","showModal","fetchMovieById","dataset","then","renderModal","tab","Promise","all","movieId","remove","queueIds","queueMovies","$9da563a3715d9237$export$a362ca83dec24041"],"version":3,"file":"library.c62bb77b.js.map"}