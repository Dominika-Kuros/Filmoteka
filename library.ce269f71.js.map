{"mappings":"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","sources":["src/js/modal-devs.js","src/library.js"],"sourcesContent":["const modalDevsLink = document.querySelector('.footer-highlight');\nconst modalDevsWindow = document.querySelector('.modal-devs');\nconst modalDevsBtns = document.querySelectorAll('[data-slider-button]');\nconst modalDevsImages = [...document.querySelectorAll('.modal-devs__slide')];\n\nexport function openModalDevs() {\n  modalDevsWindow.classList.remove('modal-devs-hidden');\n}\n\nexport function closeModalDevs() {\n  modalDevsWindow.classList.add('modal-devs-hidden');\n}\n\nmodalDevsBtns.forEach(button => {\n  button.addEventListener('click', () => {\n    const btnMoves = button.dataset.sliderButton === 'next' ? 1 : -1;\n    const slides = button.closest('.modal-devs__slider').querySelector('.modal-devs__slide-list');\n    const activeSlide = slides.querySelector('[data-active]');\n    let newIndex = [...slides.children].indexOf(activeSlide) + btnMoves;\n    if (newIndex < 0) newIndex = slides.children.length - 1;\n    if (newIndex >= slides.children.length) newIndex = 0;\n\n    slides.children[newIndex].dataset.active = true;\n    delete activeSlide.dataset.active;\n  });\n});\n\nmodalDevsBtns.forEach(button => {\n  button.addEventListener('click', () => {\n    const btnMoves = button.dataset.sliderButton === 'next' ? 1 : -1;\n    navImages(btnMoves);\n  });\n});\n\nexport function navImages(btnMoves) {\n  const activeImage = document.querySelector('.modal-devs__slide[data-active]');\n  if (!activeImage) {\n    return;\n  }\n  let newIndex = modalDevsImages.indexOf(activeImage) + btnMoves;\n  if (newIndex < 0) newIndex = modalDevsImages.length - 1;\n  if (newIndex >= modalDevsImages.length) newIndex = 0;\n\n  activeImage.removeAttribute('data-active');\n  modalDevsImages[newIndex].setAttribute('data-active', '');\n}\n\nwindow.addEventListener('keydown', event => {\n  if (event.key === 'ArrowLeft') {\n    navImages(-1);\n  } else if (event.key === 'ArrowRight') {\n    navImages(1);\n  }\n});\n\nmodalDevsLink.addEventListener('click', openModalDevs);\nwindow.addEventListener('keydown', event => {\n  if (event.key === 'Escape') {\n    closeModalDevs();\n  }\n});\nwindow.addEventListener('click', event => {\n  if (event.target.classList.contains('modal-devs')) {\n    closeModalDevs();\n  }\n});\n","import './sass/main.scss';\nimport './js/modal-devs';\n\nconst queueIds = JSON.parse(localStorage.getItem('queue'));\nconst watchedIds = JSON.parse(localStorage.getItem('watched'));\n\nconst queueButton = document.querySelector('#queue-btn');\nconst watchedButton = document.querySelector('#watched-btn');\n\nconst API_KEY = '3453ae595a5d53cbc877c6d05de8a002';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nqueueButton.addEventListener('click', async () => {\n  let queueMovies = await save(queueIds);\n  displayMovies(queueMovies);\n});\nwatchedButton.addEventListener('click', async () => {\n  let watchedMovies = await save(watchedIds);\n  displayMovies(watchedMovies);\n});\n\nasync function getGenres(movieId) {\n  const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.genres;\n}\n\nfunction displayMovies(movies, maxGenres = 2) {\n  const moviesContainer = document.querySelector('#library-gallery');\n  moviesContainer.innerHTML = '';\n  movies.forEach(async movie => {\n    const genres = await getGenres(movie.id);\n    const genreNames = genres.map(genre => genre.name);\n    const displayedGenres =\n      genreNames.length > maxGenres ? genreNames.slice(0, maxGenres).concat(['other']) : genreNames;\n    const genreText = displayedGenres.join(', ');\n\n    const movieCard = `\n      <div data-id=${movie.id} class=\"movie-card\">\n        <div class=\"movie-card__placeholder\"><img class=\"movie-card__image\" src=\"https://image.tmdb.org/t/p/w500${\n          movie.poster_path\n        }\" alt=\"${movie.title}\" width=\"395\" height=\"574\"></div>\n        <h2 class=\"movie-card__tittle\">${movie.title}</h2>\n        <p class=\"movie-card__info\"> \n        <span class=\"movie-card__overview\">${genreText}</span> | <span class=\"movie-card__realease-date\">${movie.release_date.slice(\n      0,\n      4,\n    )}\n    `;\n    moviesContainer.insertAdjacentHTML('beforeend', movieCard);\n  });\n  moviesContainer.addEventListener('click', e => {\n    if (e.target.closest('.movie-card') === null) {\n      return;\n    }\n    showLoader();\n    showModal();\n    fetchMovieById(e.target.closest('.movie-card').dataset.id).then(movie => {\n      renderModal(movie);\n      removeLoader();\n    });\n  });\n}\n\nconst fetchMovieById = async movie_id => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movie_id}?api_key=964358699754c21d74c014b561cf196c&language=en-US`,\n    );\n    const movie = await response.json();\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\nasync function save(tab) {\n  const moviesData = await Promise.all(\n    tab.map(async movieId => {\n      const movieData = await fetchMovieById(movieId);\n      return movieData;\n    }),\n  );\n  return moviesData;\n}\n//\n"],"names":["$d3c24f4f4d588a9b$var$modalDevsLink","document","querySelector","$d3c24f4f4d588a9b$var$modalDevsWindow","$d3c24f4f4d588a9b$var$modalDevsBtns","querySelectorAll","$d3c24f4f4d588a9b$var$modalDevsImages","$d3c24f4f4d588a9b$export$5e116a654520e5af","classList","add","$d3c24f4f4d588a9b$export$4c5bea5175778407","btnMoves","activeImage","newIndex","indexOf","length","removeAttribute","setAttribute","forEach","button","addEventListener","dataset","sliderButton","slides","closest","activeSlide","children","active","window","event","key","remove","target","contains","$9a8afeea60b9dfd3$var$queueIds","JSON","parse","localStorage","getItem","$9a8afeea60b9dfd3$var$watchedIds","$9a8afeea60b9dfd3$var$queueButton","$9a8afeea60b9dfd3$var$watchedButton","$9a8afeea60b9dfd3$var$displayMovies","movies","maxGenres","moviesContainer","innerHTML","async","movie","genreNames","movieId","response","fetch","json","genres","$9a8afeea60b9dfd3$var$getGenres","id","map","genre","name","genreText","slice","concat","join","movieCard","poster_path","title","release_date","insertAdjacentHTML","e","showLoader","showModal","$9a8afeea60b9dfd3$var$fetchMovieById","then","renderModal","removeLoader","$9a8afeea60b9dfd3$var$save","movie_id","error","console","log","tab","Promise","all"],"version":3,"file":"library.ce269f71.js.map"}